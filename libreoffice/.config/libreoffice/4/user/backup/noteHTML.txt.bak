Phần HTML

HTML Formatting Elements - HTML tag

<q></q>                                                       - thêm dấu "" cho văn bản
<b></b> - Bold text                                     -   Chữ in đậm
<strong></strong> - Important text             - Văn bản quan trọng
<i></i> - Italic text                                      - Văn bản nghiêng
<em></em> - Emphasized text                 - nhấn mạnh văn bản
<mark></mark> - Marked text                 - Văn bản được đánh dấu
<small></small> - Smaller text                 -Văn bản nhỏ hơn
<del></dell> - Deleted text                      -Văn bản đã xóa  (strikeout)   Thêm một dòng qua (gạch ngang) các chữ cái  
<ins></ins> - Inserted text                       -Đã chèn văn bản 
<sub></sub> - Subscript text                   -Văn bản chỉ số    
<sup></sup> - Superscript text                -Văn bản siêu chỉ số    
<p></p>:                                                   xác định một đoạn văn bản
thẻ <u></u> :                                             dùng để gạch chân nội dung
thẻ<br/>:                                                     dùng để ngắt dòng. HTML không hiểu chỗ Enter. Nhưng hiểu thẻ này
Thẻ <center></center>:                              Dùng để căn giữa nội dung
thẻ <br>                                                       dùng để ngắt dòng giữa đoạn văn bản
Thẻ <pre></pre>                                       dùng để tất cả các khoảng trắng và dấu ngắt dòng khi phần tử được hiển thị
Cặp thẻ <sup>…</sup>                            dùng để chèn các chỉ số trên như x^2
Dùng cặp thẻ <sub>…</sub>                    để viết những ký tự có dạng H2O

HTML Quotation and Citation Elements(Các phần tử trích dẫn và trích dẫn trong HTML)

<q></q> : The HTML <q> tag defines a short quotation.
Thẻ HTML <q> xác định một trích dẫn ngắn.
Các trình duyệt thường chèn dấu ngoặc kép xung quanh dấu ngoặc kép.

<blockquote></blockquote> : HTML <blockquote> for Quotations : 
Phần tử HTML <blockquote> xác định một phần được trích dẫn từ một nguồn khác.
Trình duyệt thường thụt lề <blockquote> các phần tử.

HTML <abbr> for Abbreviations : <abbr></abbr>  
Thẻ HTML <abbr> xác định chữ viết tắt hoặc từ viết tắt, như "HTML", "CSS", "Mr.", "Dr.", "ASAP", "ATM". Đánh dấu các chữ viết tắt có thể cung cấp thông tin hữu ích cho các trình duyệt, hệ thống dịch thuật và công cụ tìm kiếm. 
Mẹo: Sử dụng thuộc tính tiêu đề chung để hiển thị mô tả cho từ viết tắt / từ viết tắt khi bạn di chuột qua phần tử..

Thẻ HTML <address> xác định thông tin liên hệ của tác giả / chủ sở hữu của một tài liệu hoặc một bài báo.
Thông tin liên hệ có thể là địa chỉ email, URL, địa chỉ thực, số điện thoại, phương tiện truyền thông xã hội, v.v.
Văn bản trong <address> phần tử thường hiển thị ở dạng nghiêng và các trình duyệt sẽ luôn thêm dấu ngắt dòng trước và sau phần tử <address> .

Thẻ HTML <cite> xác định tiêu đề của một tác phẩm sáng tạo (ví dụ: một cuốn sách, một bài thơ, một bài hát, một bộ phim, một bức tranh, một tác phẩm điêu khắc, v.v.).
Lưu ý: Tên của một người không phải là tên của một tác phẩm.
Văn bản trong  phần tử <cite> thường hiển thị ở dạng nghiêng .

BDO là viết tắt của Bi-Directional Override.
Thẻ HTML <bdo> được sử dụng để ghi đè hướng văn bản hiện tại:

HTML COMMENT : 
<!--   -->

HTML Styles - CSS
CSS can be added to HTML documents in 3 ways:

Inline - bằng cách sử dụng stylethuộc tính bên trong các phần tử HTML
Internal - bằng cách sử dụng một <style>phần tử trong phần <head>
CSS nội bộ được sử dụng để xác định kiểu cho một trang HTML.
CSS nội bộ được định nghĩa trong <head>phần của trang HTML, bên trong một <style>phần tử.
External - bằng cách sử dụng một <link> phần tử để liên kết đến một tệp CSS bên ngoài
Thêm liên kết đến biểu định kiểu này trong <head>phần của mỗi trang HTML
<link rel="stylesheet" href="styles.css">

CSS Colors, Fonts and Sizes,....

color: Thuộc tính CSS xác định màu văn bản sẽ được sử dụng.
font-family: Thuộc tính CSS xác định phông chữ sẽ được sử dụng.
font-size : Thuộc tính CSS xác định kích thước văn bản sẽ được sử dụng.
border : Thuộc tính CSS xác định một đường viền xung quanh một phần tử HTML.
padding: Thuộc tính CSS xác định một khoảng đệm (khoảng trắng) giữa văn bản và đường viền.
margin :Thuộc tính CSS xác định lề (khoảng trắng) bên ngoài đường viền.
Các biểu định kiểu bên ngoài có thể được tham chiếu với một URL đầy đủ hoặc với một đường dẫn liên quan đến trang web hiện tại. ex: <link rel="stylesheet" href="/html/styles.css">
text-align :  căn giữa văn bản
           
HTML LINK:

HTML Links - Syntax (Liên kết HTML - Cú pháp)
<a> :Thẻ HTML xác định một siêu liên kết. Nó có cú pháp sau:

ex:          <a href="url">link text</a>
Thuộc tính quan trọng nhất của <a> phần tử là hrefthuộc tính, chỉ ra điểm đến của liên kết.
Các văn bản liên kết là phần mà sẽ được hiển thị cho người đọc.
Nhấp vào văn bản liên kết, sẽ đưa người đọc đến địa chỉ URL được chỉ định.

HTML Links - The target Attribute (Liên kết HTML - Thuộc tính mục tiêu)

Các target thuộc tính có thể có một trong các giá trị sau:

_self- Mặc định. Mở tài liệu trong cùng một cửa sổ / tab khi nó được nhấp vào
_blank - Mở tài liệu trong một cửa sổ hoặc tab mới
_parent - Mở tài liệu trong khung chính
_top - Mở tài liệu trong toàn bộ phần thân của cửa sổ

Absolute URLs vs. Relative URLs ( URL tuyệt đối so với URL tương đối)
Cả hai ví dụ trên đều đang sử dụng URL tuyệt đối (địa chỉ web đầy đủ) trong href thuộc tính.
Liên kết cục bộ (liên kết đến một trang trong cùng một trang web) được chỉ định bằng một URL tương đối (không có phần "https: // www"):

text-decoration : chỉnh sửa ở link(có gạch chân hay k ? )


HTML Images

Images ( hình ảnh)

Thẻ HTML<img> được sử dụng để nhúng một hình ảnh vào một trang web.
Hình ảnh không được chèn vào một trang web về mặt kỹ thuật; hình ảnh được liên kết với các trang web.
 Các <img>thẻ tạo ra một không gian nắm giữ cho hình ảnh tham chiếu.
Các <img>thẻ trống, nó chỉ chứa các thuộc tính, và không có một thẻ đóng.
Các <img>thẻ có hai thuộc tính cần thiết:
src - Chỉ định đường dẫn đến hình ảnh
alt - Chỉ định văn bản thay thế cho hình ảnh

Thuộc tính src  bắt buộc chỉ định đường dẫn (URL) đến hình ảnh.
Thuộc tính alt bắt buộc cung cấp văn bản thay thế cho hình ảnh, nếu người dùng vì lý do nào đó không thể xem nó (vì kết nối chậm, lỗi trong thuộc tính src hoặc nếu người dùng sử dụng trình đọc màn hình).

Bạn có thể sử dụng thuộc tính style để chỉ định chiều rộng và chiều cao của hình ảnh.
Ngoài ra, bạn có thể sử dụng các thuộc tính width và height: Các widthvà heightcác thuộc tính luôn luôn xác định chiều rộng và chiều cao của hình ảnh bằng pixel.
Nếu bạn có hình ảnh của mình trong một thư mục con, bạn phải bao gồm tên thư mục trong thuộc tính src .
Một số trang web trỏ đến một hình ảnh trên một máy chủ khác.
Để trỏ đến một hình ảnh trên một máy chủ khác, bạn phải chỉ định một URL tuyệt đối (đầy đủ) trong thuộc tính src .
Để sử dụng hình ảnh làm liên kết, hãy đặt thẻ <img> bên trong thẻ <a> :
Sử dụng thuộc tính CSS float để cho hình ảnh nổi sang phải hoặc sang trái của văn bản:

IMAGE MAP (bản đồ hình ảnh)

Thẻ HTML <map> xác định một bản đồ hình ảnh. Bản đồ hình ảnh là một hình ảnh có các khu vực có thể nhấp được. Các khu vực được xác định bằng một hoặc nhiều thẻ <area>.
Hình ảnh được chèn bằng thẻ <img>. Sự khác biệt duy nhất so với các hình ảnh khác là bạn phải thêm thuộc tính usemap:
Các giá trị usemap bắt đầu với một thẻ băm # theo sau là tên của bản đồ hình ảnh, và được sử dụng để tạo ra một mối quan hệ giữa hình ảnh và bản đồ hình ảnh.
Sau đó, thêm một phần tử <map>.
Phần tử <map> được sử dụng để tạo bản đồ hình ảnh và được liên kết với hình ảnh bằng cách sử dụng thuộc tính name bắt buộc
Các thuộc tính name phải có giá trị tương tự như <img> của thuộc tính usemap .
Một khu vực có thể nhấp được xác định bằng cách sử dụng một phần tử <area>.
Các tọa độ cho shape="rect" thành từng cặp, một cho trục x và một cho trục y.
Thêm một click sự kiện vào phần tử <area>  để thực thi một hàm JavaScript:

Background Image on a HTML element ( Hình nền trên một phần tử HTML )
Để thêm hình nền trên một phần tử HTML, hãy sử dụng stylethuộc tính HTML và thuộc tính CSS background-image:
Bạn cũng có thể chỉ định hình nền trong  phần tử <style>, trong  phần <head>
Nếu bạn muốn toàn bộ trang có hình nền, bạn phải chỉ định hình nền trên phần tử <body>
Để tránh hình nền tự lặp lại, hãy đặt thuộc tính background-repeat  thành no-repeat
Nếu bạn muốn hình nền bao phủ toàn bộ phần tử, bạn có thể đặt thuộc tính background-size  thành cover.
Ngoài ra, để đảm bảo toàn bộ phần tử luôn được bao phủ, hãy đặt thuộc  tính background-attachment thành fixed:
Nếu bạn muốn hình nền kéo dài để vừa với toàn bộ phần tử, bạn có thể đặt thuộc tính background-size  thành 100% 100%
Phần tử HTML <picture> giúp các nhà phát triển web linh hoạt hơn trong việc chỉ định tài nguyên hình ảnh.
Phần tử  <picture> chứa một hoặc nhiều phần tử <source>, mỗi phần tử đề cập đến các hình ảnh khác nhau thông qua thuộc tính srcset . Bằng cách này, trình duyệt có thể chọn hình ảnh phù hợp nhất với chế độ xem và / hoặc thiết bị hiện tại.
Mỗi phần tử <source> có một thuộc tính media  xác định thời điểm hình ảnh phù hợp nhất.




HTML Tables

Các <table> thẻ định nghĩa một bảng HTML.

Mỗi hàng trong bảng được xác định bằng một  thẻ <tr>. 
Mỗi tiêu đề bảng được xác định bằng một thẻ <th> .
Mỗi ô / dữ liệu bảng được xác định bằng một thẻ <td> .
Theo mặc định, văn bản trong <th> các phần tử được in đậm và căn giữa.
Theo mặc định, văn bản trong <td> các phần tử là thông thường và được căn trái.
Để thêm đường viền vào bảng, hãy sử dụng thuộc tính CSS border:   ex: border: 1px solid black;
Để cho các đường viền thu gọn thành một đường viền, hãy thêm thuộc tính CSS border-collapse:
Để đặt phần đệm, hãy sử dụng thuộc tính CSS padding:
Theo mặc định, tiêu đề bảng được in đậm và căn giữa. Để căn trái các tiêu đề bảng, hãy sử dụng thuộc tính CSS text-align:
Để đặt khoảng cách đường viền cho bảng, hãy sử dụng thuộc tính CSS border-spacing:
( Lưu ý: Nếu bảng có đường viền thu gọn, border-spacingkhông có hiệu lực.)
Để tạo một ô kéo dài nhiều hơn một cột, hãy sử dụng thuộc tính colspan:
Để tạo một ô kéo dài nhiều hơn một hàng, hãy sử dụng thuộc tính rowspan:
Để thêm chú thích vào bảng, hãy sử dụng thẻ <caption>: (Lưu ý: Các <caption>thẻ phải được chèn vào ngay sau thẻ<table>.)
Để xác định một kiểu đặc biệt cho một bảng cụ thể, hãy thêm một thuộc tính id  vào bảng:

HTML Lists

Một danh sách không có thứ tự bắt đầu bằng thẻ <ul>. Mỗi mục danh sách bắt đầu bằng thẻ <li>.
Một danh sách có thứ tự bắt đầu bằng thẻ <ol>. Mỗi mục danh sách bắt đầu bằng thẻ <li>.
Danh sách mô tả là danh sách các thuật ngữ, với mô tả của từng thuật ngữ.
Một danh sách không có thứ tự bắt đầu bằng thẻ <ul>. Mỗi mục danh sách bắt đầu bằng thẻ <li>.
Thuộc tính CSS  list-style-type được sử dụng để xác định kiểu của điểm đánh dấu mục danh sách. Nó có thể có một trong các giá trị sau: disc, circle, square, none
Sử dụng thuộc tính CSS float:left để hiển thị danh sách theo chiều ngang

Ordered HTML List - The Type Attribute( Danh sách HTML có thứ tự - Thuộc tính Loại) 

Các typethuộc tính của <ol>thẻ, xác định các loại điểm đánh dấu mục danh sách: 
type="1"  :  Các mục trong danh sách sẽ được đánh số bằng số (mặc định)
type="A"  : Các mục trong danh sách sẽ được đánh số bằng chữ hoa
type="a"  : Các mục trong danh sách sẽ được đánh số bằng chữ thường
type="I"  : Các mục trong danh sách sẽ được đánh số bằng số la mã viết hoa
type="i"  : Các mục trong danh sách sẽ được đánh số bằng số la mã viết thường

Theo mặc định, danh sách có thứ tự sẽ bắt đầu đếm từ 1. Nếu bạn muốn bắt đầu đếm từ một số được chỉ định, bạn có thể sử dụng thuộc tính start="" .(Các danh sách có thể được lồng vào nhau (danh sách bên trong danh sách))
Lưu ý: Mục danh sách ( <li>) có thể chứa danh sách mới và các phần tử HTML khác, như hình ảnh và liên kết, v.v.

HTML Description Lists(Danh sách mô tả HTML)

Sử dụng <dl>phần tử HTML để xác định danh sách mô tả
Sử dụng <dt>phần tử HTML để xác định thuật ngữ mô tả
Sử dụng <dd>phần tử HTML để mô tả thuật ngữ trong danh sách mô tả

<header> - Xác định tiêu đề cho một tài liệu hoặc một phần
<nav> - Xác định một tập hợp các liên kết điều hướng
<section> - Xác định một phần trong tài liệu
<article> - Xác định một nội dung độc lập, khép kín
<aside> - Xác định nội dung bên cạnh nội dung (như một thanh bên)
<footer> - Xác định chân trang cho một tài liệu hoặc một phần
<details> - Xác định các chi tiết bổ sung mà người dùng có thể mở và đóng theo yêu cầu
<summary>- Xác định tiêu đề cho <details>phần tử


HTML Lists

<ul></ul>  : xác định danh sách k có thứ tự

<ol></ol> : xác định danh sách có thứ tự
Các type thuộc tính của thẻ <ol>, xác định các loại điểm đánh dấu mục danh sách:
Type	                                  Description(mô tả)
type="1"	Các mục trong danh sách sẽ được đánh số bằng số (mặc định)
type="A"	Các mục trong danh sách sẽ được đánh số bằng chữ hoas
type="a"	Các mục trong danh sách sẽ được đánh số bằng chữ thường
type="I"	Các mục trong danh sách sẽ được đánh số bằng số la mã viết hoa
type="i"	Các mục trong danh sách sẽ được đánh số bằng số la mã viết thường
Theo mặc định, danh sách có thứ tự sẽ bắt đầu đếm từ 1. Nếu bạn muốn bắt đầu đếm từ một số được chỉ định, bạn có thể sử dụng thuộc tính start:

<li></li> : xác định một mục danh sách
<dl></dl> : xác định danh sách mô tả
<dt></dt> : xác định một thuật ngữ trong danh sách mô tả 
<dd></dd> : Mô tả thuật ngữ trong danh sách mô tả

Thuộc tính CSS list-style-type được sử dụng để xác định kiểu của điểm đánh dấu mục danh sách. 
Nó có thể có một trong các giá trị sau:
Value	Description 
disc	Đặt điểm đánh dấu mục danh sách thành dấu đầu dòng (mặc định)
circle	Đặt điểm đánh dấu mục danh sách thành một vòng kết nối
square	Đặt điểm đánh dấu mục danh sách thành hình vuông
none	Các mục trong danh sách sẽ không được đánh dấu

Sử dụng thuộc tính CSS float:left để hiển thị danh sách theo chiều ngang

Sự khác biệt giữa Class và ID
Một tên class có thể được sử dụng bởi nhiều phần tử HTML, trong khi tên id chỉ được sử dụng bởi một phần tử HTML trong trang
Các  thuộc tính id được sử dụng bởi CSS và JavaScript để phong cách / chọn một yếu tố cụ thể
Giá trị của thuộc tính  id có phân biệt chữ hoa chữ thường
Các  thuộc tính id cũng được sử dụng để tạo ra bookmark HTML

Thẻ HTML <iframe> chỉ định khung nội tuyến
Các src thuộc tính xác định URL của trang nhúng
Luôn bao gồm một title thuộc tính (dành cho trình đọc màn hình)
Các thuộc tính height và width quy định cụ thể kích thước của khung nội tuyến
Sử dụng border: none;  để xóa đường viền xung quanh iframe

Thẻ HTML <script> được sử dụng để xác định tập lệnh phía máy khách (JavaScript).
Phần tử <script> chứa các câu lệnh script hoặc nó trỏ đến một tệp script bên ngoài thông qua  thuộc tính src
Các ứng dụng phổ biến cho JavaScript là thao tác hình ảnh, xác thực biểu mẫu và các thay đổi động của nội dung.
Để chọn một phần tử HTML, JavaScript thường sử dụng phương pháp document.getElementById()  này nhất.

Thẻ HTML <noscript> xác định nội dung thay thế sẽ được hiển thị cho người dùng đã tắt tập lệnh trong trình duyệt của họ hoặc có trình duyệt không hỗ trợ tập lệnh

Phần tử HTML <kbd> được sử dụng để xác định đầu vào bàn phím. Nội dung bên trong được hiển thị bằng phông chữ monospace mặc định của trình duyệt.

Phần tử HTML <samp> được sử dụng để xác định đầu ra mẫu từ một chương trình máy tính. Nội dung bên trong được hiển thị bằng phông chữ monospace mặc định của trình duyệt.

Phần tử HTML <code> được sử dụng để xác định một đoạn mã máy tính. Nội dung bên trong được hiển thị bằng phông chữ monospace mặc định của trình duyệt.
Lưu ý rằng phần tử <code> không bảo toàn khoảng trắng thừa và dấu ngắt dòng.
Để khắc phục điều này, bạn có thể đặt phần tử <code> bên trong một phần tử <pre>

Phần tử HTML <var> được sử dụng để xác định một biến trong lập trình hoặc trong một biểu thức toán học. Nội dung bên trong thường được hiển thị bằng chữ nghiêng.

Phần tử HTML <form> được sử dụng để tạo một biểu mẫu HTML cho đầu vào của người dùng

Phần tử HTML <input> là phần tử biểu mẫu được sử dụng nhiều nhất. Phần tử <input> có thể được hiển thị theo nhiều cách, tùy thuộc vào thuộc tính type.
ví dụ:
        Type                                           Description
<input type = "text">       Hiển thị trường nhập văn bản một dòng
<input type = "radio">        Hiển thị nút radio (để chọn một trong nhiều lựa chọn)
<input type = "checkbox"> Hiển thị hộp kiểm ( để chọn không hoặc nhiều lựa chọn)
<input type = "submit">     Hiển thị nút gửi (để gửi biểu mẫu)
<input type = "button">     Hiển thị nút có thể nhấp
<Input type = "text"> xác định trường nhập một dòng để nhập văn bản.

Thẻ <label> xác định nhãn cho nhiều phần tử biểu mẫu. 
Phần tử <label> hữu ích cho người dùng trình đọc màn hình, vì trình đọc màn hình sẽ đọc to nhãn khi người dùng tập trung vào phần tử đầu vào. 
Phần tử <label> cũng giúp người dùng gặp khó khăn khi nhấp vào các vùng rất nhỏ (chẳng hạn như nút radio hoặc hộp kiểm) - bởi vì khi người dùng nhấp vào văn bản trong phần tử <label>, nó sẽ chuyển nút button / checkbox. 
Thuộc tính for của thẻ <label> phải bằng thuộc tính id của phần tử <input> để liên kết chúng với nhau.

HTML  - Bài 1

HTML =  HyperText Markup Language 
Cung cấp những quy tắc để mô tả cách hiển thị dữ liệu, gọi là thẻ(tag) 
Sử dụng thẻ để mô tả dữ liệu -> Dựa trên mô tả đó , trình duyệt sẽ hiển thị dữ liệu.
là ngôn ngữ dùng để đánh dấu - hiểu thị
k phải ngôn ngữ lập trình

Cách tạo và xem kết hiển thị của một tài liệu HTML như thế nào?

Cấu trúc của 1 tài liệu HTML  phải như thế nào?

<tên_thẻ>nội dung bị tác động</tên_thẻ>

thuộc tính :

<tên_thẻ thuộc_tính1="giá trị" thuộc_tính2="giá tị"> nội dung </tên_thẻ>
<tên_thẻ thuộc_tính1="giá trị" thuộc_tinsh2="giá tị" />

thẻ:
<p></p>: xác định một đoạn văn bản
thẻ <b></b> : dùng để in đậm nội dung
thẻ <i></i>: dùng để IN NGhiêng nd
thẻ <u></u> : dùng để gạch chân nội dung
thẻ<br/>: dùng để ngắt dòng. HTML không hiểu chỗ Enter. Nhưng hiểu thẻ này
Thẻ <center></center>: Dùng để căn giữa nội dung
thẻ <br> dùng để ngắt dòng giữa đoạn văn bản
Thẻ <pre></pre> dùng để tất cả các khoảng trắng và dấu ngắt dòng khi phần tử được hiển thị
 HTML  - Bài 2 

thẻ <ol>
                 <li>Nội dung phần tử một</li>
                 <li>Nội dung phần tử hai</li>
                 <li>Nội dung phần tử ba</li>
</ol>
 

2.1. Chèn liên kết 

./            tương ứng với vị trí của tài liệu hiện tại
ví dụ :từ file index-1.html trong thư mục thư mục Vi-Du-1 
chúng ta đặt 1 liên kết đến file tai-lieu.html   ./tai-lieu.html ( vì file tai-lieu.html đang ở VD1 ở ổ C

../           tương ứng với vị trí của tài liệu hiện tại trở ra trước 1  thư mục
ví dụ:  từ file index-2.html trong thư mục thư mục Vi-Du-2 
chúng ta đặt 1 liên kết đến file tai-lieu.html  thì : ../vi-du-1/tai-lieu.htm(vì trong thư mục Vi-Du-2 k có file tai-lieu.html)

2.2. Siêu liên kết -> liên kết giữa các tài liệu HTML khác nhau

<a href="đường dẫn tới tài liệu khác">văn bản để liên kết</a>

2.3. Chèn hình ảnh vào tài liệu

<img src="đường dẫn tới hình ảnh" />

2.4. Bản đồ Siêu Liên Kết trên hình ảnh

<img src="đường dẫn tới hình ảnh" usemap="#map_name" />
<map name="map_name">
          <area shape="rect" coords="x1,y1,x2,y2" href="đường dẫn" />
          <area shape="circle" coords="x,y,r" href="đường dẫn" />
</map>


Bài 3 :  - Trình bày dữ liệu dạng Bảng(hàng và cột)
            - Chèn VIDEO

3.1. Dạng bảng :
dùng thẻ <table ></table>
đại diện cho hàng thì là thẻ <tr></tr> 
đại diện cho cột trong hàng là <td>Hàng a - Cột b</td>

*nếu 1 cột chiếm x cột thì dùng  <td colspan="x">Hàng a - Cột b</td>
*nếu 1 cột chiến x hàng thì dùng <td rowspan="x">Hàng a - Cột b</td>

<table border="x"></table> độ dày của vạch biên = x
<table cellpadding="x"></table> khoảng cách từ biên đến nội dung = x
<table cellspacing="x"></table> độ dày của biên  = x

3.2.  Chèn Video, âm thanh,....

<video>
           <source src="đường đẫn file video.mp4" type="video/mp4" />
</video>

<audio controls="controls">
          <source src="đường dẫn  file video.mp3" type="audio/mpeg" />
</audio>

 thêm autoplay ở <video autoplay="1"> thì nó sẽ tự phát video
thêm controls="controls" vào <video> thì nó sẽ có bộ điều khiển 

mp4 -> video/mp4
ogg -> video/ogg
mp3 -> audio/mpeg 
wav -> audio/wav
alt -> logo


Buổi 4 :
4.1 : Các thẻ trình bày biểu mẫu (FORM)
<form Method = <phương thức> Action = "URL"> 
       <input> yêu cầu thông tin bằng một trong nhiều cách khác nhau
</form>

<phương thức>: nhận giá trị Post or Get

dùng thẻ <form></form>
    trong thẻ đó có <input type="dạng" /> <br/>

dạng : text là textbox: điền dãy ký tự
           checkbox : tích
           radio là radio Checkbox : chọn 1 trong 3 mục
 thẻ <select>  
                    <option> Giá trị 1</option> 
          ...
       </select>  để tạo 1 dropdown list gồm nhiều mục có thể chọn
<textarea></textarea> tạo 1 textbox multiple nhiều dòng

4.2: Giới thiệu về IFRAME

<iframe src="đường dẫn" width="500" height="100" frameborder="0"></iframe>

nhúng web trong web

4.3. Thẻ đặc biệt DIV, LABEL, SPAN, CANVAS...

để cấu trúc dữ liệu


Bài 5: 
5.1: Hiểu về HTML5 


5.2. Chuẩn XML trong code HTML

1. Có thẻ mở phải có thẻ đóng. Nếu thẻ đơn thì phải có dấu đóng thẻ đơn /> ở cuối
2. Nếu có nhiều thẻ lồng nhau, thẻ nào mở sau thì được đóng trc
3. Toàn bộ tên thẻ, tên thuộc tính của thẻ đều phải viết thường vd: <p></p>,...
4. Toàn bộ giá trị thuộc tính phải đặt trong dấu nháy kép"..." vd: src"..." ,...
5. Không được phép sử dụng thuộc tính theo phong cách rút gọn(?giải thích)
6. Có thể tự ý đặt thêm tên thuộc tính tùy thích để lưu trữ những giá trị tùy thích , miễn nó tuân thủ qui tắc 3-4-5


Bài 6: 
6.1. làm quen với khái niệm HTML DOM
 - DOM - Document Object Model - "đối tượng hóa" các thẻ HTML trong tài liệu HTML nhằm mục đích có thể dễ dàng truy cập và tác động đến nội dung cũng như thuộc tính của các thẻ HTML
HTML DOM hđ = cách xem mỗi thẻ HTML là 1 đối tg thực thể. Rồi từ đó truy xuất và tác động đến chúng.

Tại sao cần HTML DOM?
Mô hình này cung cấp cho một ngôn ngữ SCRIPT phía CLIENT(phổ biến là JAVASCRIP) có thể dễ dàng tác động đén các thẻ HTML cần thiết khi cần.

6.2. Những cách xác định DOM trong tài liệu HTML

- Xác định bằng tên thẻ HTML như p,img,b...
-Xác định bằng thuộc tính id="..." - xác định id duy nhất
-Xác định bằng thuộc tính class="..."  muốn tác động  cùng 1 lúc lên các thẻ HTML thì chỉ cần dùng thẻ class - chỉ xđ vs những ptu đã đc nhóm từ trc
-Xác định bằng sự kết hợp của 3 yếu tố trên 

6.3. Mô hình đồ họa hóa về DOM - quan trọng

cách nhìn theo phương pháp đồ hoại về DOM là cách biểu diễn dạng CÂY
có NODE : PARENT NODE -> CHILD NODE 


